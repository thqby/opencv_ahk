#pragma once
#include "cv_mat.h"

BIF_DECL(CV_FUNC);
BIF_DECL(CV_FUNC2);
enum CV_FUNCID : UCHAR {
	FID_CamShift,
	FID_Canny,
	FID_GaussianBlur,
	FID_HoughCircles,
	FID_HoughLines,
	FID_HoughLinesP,
	FID_HoughLinesPointSet,
	FID_HoughLinesWithAccumulator,
	FID_HuMoments,
	FID_LUT,
	FID_Laplacian,
	FID_Mahalanobis,
	FID_PCABackProject,
	FID_PCACompute,
	FID_PCAProject,
	FID_PSNR,
	FID_RQDecomp3x3,
	FID_Rodrigues,
	FID_SVBackSubst,
	FID_SVDecomp,
	FID_Scharr,
	FID_Sobel,
	FID_absdiff,
	FID_accumulate,
	FID_accumulateProduct,
	FID_accumulateSquare,
	FID_accumulateWeighted,
	FID_adaptiveThreshold,
	FID_add,
	FID_addText,
	FID_addWeighted,
	FID_applyColorMap,
	FID_approxPolyDP,
	FID_arcLength,
	FID_arrowedLine,
	FID_batchDistance,
	FID_bilateralFilter,
	FID_bitwise_and,
	FID_bitwise_not,
	FID_bitwise_or,
	FID_bitwise_xor,
	FID_blendLinear,
	FID_blur,
	FID_borderInterpolate,
	FID_boundingRect,
	FID_boxFilter,
	FID_boxPoints,
	FID_buildOpticalFlowPyramid,
	FID_calcBackProject,
	FID_calcCovarMatrix,
	FID_calcHist,
	FID_calcOpticalFlowFarneback,
	FID_calcOpticalFlowPyrLK,
	FID_calibrateCamera,
	FID_calibrateCameraRO,
	FID_calibrateHandEye,
	FID_calibrateRobotWorldHandEye,
	FID_calibrationMatrixValues,
	FID_cartToPolar,
	FID_checkChessboard,
	FID_checkHardwareSupport,
	FID_checkRange,
	FID_circle,
	FID_clipLine,
	FID_colorChange,
	FID_compare,
	FID_compareHist,
	FID_completeSymm,
	FID_composeRT,
	FID_computeCorrespondEpilines,
	FID_computeECC,
	FID_connectedComponents,
	FID_connectedComponentsWithStats,
	FID_contourArea,
	FID_convertFp16,
	FID_convertMaps,
	FID_convertPointsFromHomogeneous,
	FID_convertPointsToHomogeneous,
	FID_convertScaleAbs,
	FID_convexHull,
	FID_convexityDefects,
	FID_copyMakeBorder,
	FID_copyTo,
	FID_cornerEigenValsAndVecs,
	FID_cornerHarris,
	FID_cornerMinEigenVal,
	FID_cornerSubPix,
	FID_correctMatches,
	FID_countNonZero,
	FID_createAlignMTB,
	FID_createBackgroundSubtractorKNN,
	FID_createBackgroundSubtractorMOG2,
	FID_createCLAHE,
	FID_createCalibrateDebevec,
	FID_createCalibrateRobertson,
	FID_createGeneralizedHoughBallard,
	FID_createGeneralizedHoughGuil,
	FID_createHanningWindow,
	FID_createLineSegmentDetector,
	FID_createMergeDebevec,
	FID_createMergeMertens,
	FID_createMergeRobertson,
	FID_createTonemap,
	FID_createTonemapDrago,
	FID_createTonemapMantiuk,
	FID_createTonemapReinhard,
	FID_cubeRoot,
	FID_cvtColor,
	FID_cvtColorTwoPlane,
	FID_dct,
	FID_decolor,
	FID_decomposeEssentialMat,
	FID_decomposeHomographyMat,
	FID_decomposeProjectionMatrix,
	FID_demosaicing,
	FID_denoise_TVL1,
	FID_destroyAllWindows,
	FID_destroyWindow,
	FID_detailEnhance,
	FID_determinant,
	FID_dft,
	FID_dilate,
	FID_displayOverlay,
	FID_displayStatusBar,
	FID_distanceTransform,
	FID_divSpectrums,
	FID_divide,
	FID_drawChessboardCorners,
	FID_drawContours,
	FID_drawFrameAxes,
	FID_drawKeypoints,
	FID_drawMarker,
	FID_drawMatches,
	FID_drawMatches2,
	FID_edgePreservingFilter,
	FID_eigen,
	FID_eigenNonSymmetric,
	FID_ellipse,
	FID_ellipse2Poly,
	FID_empty_array_desc,
	FID_empty_gopaque_desc,
	FID_empty_scalar_desc,
	FID_equalizeHist,
	FID_erode,
	FID_estimateAffine2D,
	FID_estimateAffine3D,
	FID_estimateAffinePartial2D,
	FID_estimateChessboardSharpness,
	FID_estimateTranslation3D,
	FID_exp,
	FID_extractChannel,
	FID_fastAtan2,
	FID_fastNlMeansDenoising,
	FID_fastNlMeansDenoisingColored,
	FID_fastNlMeansDenoisingColoredMulti,
	FID_fastNlMeansDenoisingMulti,
	FID_fillConvexPoly,
	FID_fillPoly,
	FID_filter2D,
	FID_filterHomographyDecompByVisibleRefpoints,
	FID_filterSpeckles,
	FID_find4QuadCornerSubpix,
	FID_findChessboardCorners,
	FID_findChessboardCornersSB,
	FID_findCirclesGrid,
	FID_findContours,
	FID_findEssentialMat,
	FID_findFundamentalMat,
	FID_findHomography,
	FID_findNonZero,
	FID_findTransformECC,
	FID_fitEllipse,
	FID_fitEllipseAMS,
	FID_fitEllipseDirect,
	FID_fitLine,
	FID_flip,
	FID_floodFill,
	FID_gemm,
};

enum CV_FUNC2ID : UCHAR {
	FID_getAffineTransform,
	FID_getBuildInformation,
	FID_getCPUFeaturesLine,
	FID_getCPUTickCount,
	FID_getDefaultNewCameraMatrix,
	FID_getDerivKernels,
	FID_getFontScaleFromHeight,
	FID_getGaborKernel,
	FID_getGaussianKernel,
	FID_getHardwareFeatureName,
	FID_getLogLevel,
	FID_getNumThreads,
	FID_getNumberOfCPUs,
	FID_getOptimalDFTSize,
	FID_getOptimalNewCameraMatrix,
	FID_getPerspectiveTransform,
	FID_getRectSubPix,
	FID_getRotationMatrix2D,
	FID_getStructuringElement,
	FID_getTextSize,
	FID_getThreadNum,
	FID_getTickCount,
	FID_getTickFrequency,
	FID_getTrackbarPos,
	FID_getValidDisparityROI,
	FID_getVersionMajor,
	FID_getVersionMinor,
	FID_getVersionRevision,
	FID_getVersionString,
	FID_getWindowImageRect,
	FID_getWindowProperty,
	FID_goodFeaturesToTrack,
	FID_grabCut,
	FID_groupRectangles,
	FID_haveImageReader,
	FID_haveImageWriter,
	FID_haveOpenVX,
	FID_hconcat,
	FID_idct,
	FID_idft,
	FID_illuminationChange,
	FID_imcount,
	FID_imdecode,
	FID_imencode,
	FID_imread,
	FID_imreadmulti,
	FID_imshow,
	FID_imwrite,
	FID_imwritemulti,
	FID_inRange,
	FID_initCameraMatrix2D,
	FID_initInverseRectificationMap,
	FID_initUndistortRectifyMap,
	FID_inpaint,
	FID_insertChannel,
	FID_integral,
	FID_intersectConvexConvex,
	FID_invert,
	FID_invertAffineTransform,
	FID_isContourConvex,
	FID_kmeans,
	FID_line,
	FID_linearPolar,
	FID_log,
	FID_logPolar,
	FID_magnitude,
	FID_matMulDeriv,
	FID_matchShapes,
	FID_matchTemplate,
	FID_max,
	FID_mean,
	FID_meanShift,
	FID_meanStdDev,
	FID_medianBlur,
	FID_merge,
	FID_min,
	FID_minAreaRect,
	FID_minEnclosingCircle,
	FID_minEnclosingTriangle,
	FID_minMaxLoc,
	FID_mixChannels,
	FID_moments,
	FID_morphologyEx,
	FID_moveWindow,
	FID_mulSpectrums,
	FID_mulTransposed,
	FID_multiply,
	FID_namedWindow,
	FID_norm,
	FID_normalize,
	FID_patchNaNs,
	FID_pencilSketch,
	FID_perspectiveTransform,
	FID_phase,
	FID_phaseCorrelate,
	FID_pointPolygonTest,
	FID_polarToCart,
	FID_pollKey,
	FID_polylines,
	FID_pow,
	FID_preCornerDetect,
	FID_projectPoints,
	FID_putText,
	FID_pyrDown,
	FID_pyrMeanShiftFiltering,
	FID_pyrUp,
	FID_randShuffle,
	FID_randn,
	FID_randu,
	FID_readOpticalFlow,
	FID_recoverPose,
	FID_rectangle,
	FID_rectify3Collinear,
	FID_reduce,
	FID_reduceArgMax,
	FID_reduceArgMin,
	FID_remap,
	FID_repeat,
	FID_reprojectImageTo3D,
	FID_resize,
	FID_resizeWindow,
	FID_rotate,
	FID_rotatedRectangleIntersection,
	FID_sampsonDistance,
	FID_scaleAdd,
	FID_seamlessClone,
	FID_selectROI,
	FID_selectROIs,
	FID_sepFilter2D,
	FID_setIdentity,
	FID_setLogLevel,
	FID_setMouseCallback,
	FID_setNumThreads,
	FID_setRNGSeed,
	FID_setTrackbarMax,
	FID_setTrackbarMin,
	FID_setTrackbarPos,
	FID_setUseOpenVX,
	FID_setUseOptimized,
	FID_setWindowProperty,
	FID_setWindowTitle,
	FID_solve,
	FID_solveCubic,
	FID_solveLP,
	FID_solveP3P,
	FID_solvePnP,
	FID_solvePnPGeneric,
	FID_solvePnPRansac,
	FID_solvePnPRefineLM,
	FID_solvePnPRefineVVS,
	FID_solvePoly,
	FID_sort,
	FID_sortIdx,
	FID_spatialGradient,
	FID_split,
	FID_sqrBoxFilter,
	FID_sqrt,
	FID_startWindowThread,
	FID_stereoCalibrate,
	FID_stereoRectify,
	FID_stereoRectifyUncalibrated,
	FID_stylization,
	FID_subtract,
	FID_sum,
	FID_textureFlattening,
	FID_threshold,
	FID_trace,
	FID_transform,
	FID_transpose,
	FID_triangulatePoints,
	FID_undistort,
	FID_undistortPoints,
	FID_useOpenVX,
	FID_useOptimized,
	FID_validateDisparity,
	FID_vconcat,
	FID_waitKey,
	FID_waitKeyEx,
	FID_warpAffine,
	FID_warpPerspective,
	FID_warpPolar,
	FID_watershed,
	FID_wrapperEMD,
	FID_writeOpticalFlow,
};


BIF_DECL(CV_CUDA_FUNC);
enum CV_CUDA_FUNCID : UCHAR {
	FID_createContinuous,
	FID_ensureSizeIsEnough,
	FID_getCudaEnabledDeviceCount,
	FID_getDevice,
	FID_printCudaDeviceInfo,
	FID_printShortCudaDeviceInfo,
	FID_registerPageLocked,
	FID_resetDevice,
	FID_setBufferPoolConfig,
	FID_setBufferPoolUsage,
	FID_setDevice,
	FID_unregisterPageLocked,
};


BIF_DECL(CV_DETAIL_FUNC);
enum CV_DETAIL_FUNCID : UCHAR {
	FID_calibrateRotatingCamera,
	FID_computeImageFeatures,
	FID_computeImageFeatures2,
	FID_createLaplacePyr,
	FID_createLaplacePyrGpu,
	FID_createWeightMap,
	FID_focalsFromHomography,
	FID_leaveBiggestComponent,
	FID_matchesGraphAsString,
	FID_normalizeUsingWeightMap,
	FID_overlapRoi,
	FID_restoreImageFromLaplacePyr,
	FID_restoreImageFromLaplacePyrGpu,
	FID_resultRoi,
	FID_resultRoiIntersection,
	FID_resultTl,
	FID_selectRandomSubset,
	FID_stitchingLogLevel,
	FID_waveCorrect,
};


BIF_DECL(CV_DNN_FUNC);
enum CV_DNN_FUNCID : UCHAR {
	FID_NMSBoxes,
	FID_NMSBoxesRotated,
	FID_blobFromImage,
	FID_blobFromImages,
	FID_getAvailableTargets,
	FID_imagesFromBlob,
	FID_readNet,
	FID_readNetFromCaffe,
	FID_readNetFromDarknet,
	FID_readNetFromModelOptimizer,
	FID_readNetFromONNX,
	FID_readNetFromTensorflow,
	FID_readNetFromTorch,
	FID_readTensorFromONNX,
	FID_readTorchBlob,
	FID_shrinkCaffeModel,
	FID_softNMSBoxes,
	FID_writeTextGraph,
};


BIF_DECL(CV_FISHEYE_FUNC);
enum CV_FISHEYE_FUNCID : UCHAR {
	FID_calibrate,
	FID_distortPoints,
	FID_estimateNewCameraMatrixForUndistortRectify,
	FID_fisheye_initUndistortRectifyMap,
	FID_fisheye_projectPoints,
	FID_fisheye_stereoCalibrate,
	FID_fisheye_stereoRectify,
	FID_undistortImage,
	FID_fisheye_undistortPoints,
};


BIF_DECL(CV_GAPI_FUNC);
enum CV_GAPI_FUNCID : UCHAR {
	FID_BGR2RGB,
	FID_RGB2Gray,
	FID_gapi_add,
	FID_addC,
	FID_gapi_boundingRect,
	FID_copy,
	FID_gapi_goodFeaturesToTrack,
	FID_gapi_kmeans,
	FID_gapi_mean,
	FID_gapi_medianBlur,
	FID_parseSSD,
	FID_parseYolo,
	FID_gapi_resize,
	FID_split3,
	FID_gapi_threshold,
};


BIF_DECL(CV_GAPI_CORE_CPU_FUNC);
enum CV_GAPI_CORE_CPU_FUNCID : UCHAR {
	FID_kernels,
};


BIF_DECL(CV_GAPI_CORE_FLUID_FUNC);
enum CV_GAPI_CORE_FLUID_FUNCID : UCHAR {
	FID_fluid_kernels,
};


BIF_DECL(CV_GAPI_CORE_OCL_FUNC);
enum CV_GAPI_CORE_OCL_FUNCID : UCHAR {
	FID_ocl_kernels,
};


BIF_DECL(CV_GAPI_IE_FUNC);
enum CV_GAPI_IE_FUNCID : UCHAR {
	FID_params,
};


BIF_DECL(CV_GAPI_RENDER_OCV_FUNC);
enum CV_GAPI_RENDER_OCV_FUNCID : UCHAR {
	FID_ocv_kernels,
};


BIF_DECL(CV_GAPI_STREAMING_FUNC);
enum CV_GAPI_STREAMING_FUNCID : UCHAR {
	FID_size,
};

/*
BIF_DECL(CV_GAPI_WIP_FUNC);
enum CV_GAPI_WIP_FUNCID : UCHAR {
	FID_make_capture_src,
};


BIF_DECL(CV_GAPI_WIP_DRAW_FUNC);
enum CV_GAPI_WIP_DRAW_FUNCID : UCHAR {
	FID_render,
	FID_render3ch,
	FID_renderNV12,
};
*/

BIF_DECL(CV_IPP_FUNC);
enum CV_IPP_FUNCID : UCHAR {
	FID_getIppVersion,
	FID_setUseIPP,
	FID_setUseIPP_NotExact,
	FID_useIPP,
	FID_useIPP_NotExact,
};


BIF_DECL(CV_OCL_FUNC);
enum CV_OCL_FUNCID : UCHAR {
	FID_finish,
	FID_haveAmdBlas,
	FID_haveAmdFft,
	FID_haveOpenCL,
	FID_setUseOpenCL,
	FID_useOpenCL,
};


BIF_DECL(CV_PARALLEL_FUNC);
enum CV_PARALLEL_FUNCID : UCHAR {
	FID_setParallelForBackend,
};


BIF_DECL(CV_SAMPLES_FUNC);
enum CV_SAMPLES_FUNCID : UCHAR {
	FID_addSamplesDataSearchPath,
	FID_addSamplesDataSearchSubDirectory,
	FID_findFile,
	FID_findFileOrKeep,
};


BIF_DECL(CV_UTILS_FUNC);
enum CV_UTILS_FUNCID : UCHAR {
	FID_dumpBool,
	FID_dumpCString,
	FID_dumpDouble,
	FID_dumpFloat,
	FID_dumpInputArray,
	FID_dumpInputArrayOfArrays,
	FID_dumpInputOutputArray,
	FID_dumpInputOutputArrayOfArrays,
	FID_dumpInt,
	FID_dumpRange,
	FID_dumpRect,
	FID_dumpRotatedRect,
	FID_dumpSizeT,
	FID_dumpString,
	FID_dumpTermCriteria,
	FID_dumpVectorOfDouble,
	FID_dumpVectorOfInt,
	FID_dumpVectorOfRect,
	FID_generateVectorOfInt,
	FID_generateVectorOfMat,
	FID_generateVectorOfRect,
	FID_testAsyncArray,
	FID_testAsyncException,
	FID_testOverloadResolution,
	FID_testOverwriteNativeMethod,
	FID_testRaiseGeneralException,
	FID_testReservedKeywordConversion,
	FID_testRotatedRect,
	FID_testRotatedRectVector,
};


BIF_DECL(CV_UTILS_FS_FUNC);
enum CV_UTILS_FS_FUNCID : UCHAR {
	FID_getCacheDirectoryForDownloads,
};


BIF_DECL(CV_VIDEOIO_REGISTRY_FUNC);
enum CV_VIDEOIO_REGISTRY_FUNCID : UCHAR {
	FID_getBackendName,
	FID_getBackends,
	FID_getCameraBackendPluginVersion,
	FID_getCameraBackends,
	FID_getStreamBackendPluginVersion,
	FID_getStreamBackends,
	FID_getWriterBackendPluginVersion,
	FID_getWriterBackends,
	FID_hasBackend,
	FID_isBackendBuiltIn,
};


